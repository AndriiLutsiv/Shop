{"ast":null,"code":"import * as TYPES from './cartPreviewActionType'; // import {\n//     initialState\n// } from '../departmentsData/departmentsDataReducer';\n\nexport const cartPreviewAC = () => {\n  return {\n    type: TYPES.TOGGLE_CART_PREVIEW\n  };\n};\nexport const addItemAC = (item, itemPrice) => {\n  return {\n    type: TYPES.ADD_ITEM,\n    item: item,\n    itemPrice: itemPrice\n  };\n};\nexport const addItemThunkCreator = (item, itemPrice, itemId) => {\n  return dispatch => {\n    let stringItem = JSON.stringify(item);\n    localStorage.setItem(itemId, stringItem);\n    dispatch(addItemAC(item, itemPrice));\n  };\n};\nexport const removeItemAC = (itemId, itemPrice, quantity) => {\n  return {\n    type: TYPES.REMOVE_ITEM,\n    itemId: itemId,\n    itemPrice: itemPrice,\n    quantity: quantity\n  };\n};\nexport const removeItemThunkCreator = (itemId, itemPrice, quantity) => {\n  return dispatch => {\n    localStorage.removeItem(itemId);\n    dispatch(removeItemAC(itemId, itemPrice, quantity));\n  };\n};\nexport const increaseAC = (itemId, itemPrice, quantity) => {\n  return {\n    type: TYPES.INCREASE_QUANTITY,\n    itemId: itemId,\n    itemPrice: itemPrice,\n    quantity: quantity\n  };\n};\nexport const decreaseAC = (itemId, itemPrice, quantity) => {\n  return {\n    type: TYPES.DECREASE_QUANTITY,\n    itemId: itemId,\n    itemPrice: itemPrice,\n    quantity: quantity\n  };\n}; // export const checkItemThunkCreator = () => {\n//     return (dispatch) => {\n//         initialState.sections.forEach(section => {\n//             section.items.forEach(item => {\n//                 // console.log(item)\n//                 if (localStorage.getItem(item.id)) {\n//                     dispatch(addItemAC(item, item.price))\n//                 }\n//             });\n//         });\n//     }\n// }\n// export const increaseThunkCretor = ( itemId, itemPrice, quantity) => {\n//     return (dispatch) => {\n//         // here i get item which is object from local storage and parse it\n//         const objItem = JSON.parse(localStorage.getItem(itemId))\n//         objItem.quantity += 1;\n//         // here i turn it back to string and update LS item by setting item again\n//         let stringItem = JSON.stringify(objItem);\n//         localStorage.setItem(itemId, stringItem);\n//         dispatch(increaseAC(itemId, itemPrice, quantity));\n//     }\n// }\n// export const decreaseThunkCretor = (itemId, itemPrice, quantity) => {\n//     return (dispatch) => {\n//         // here i get item which is object from local storage and parse it\n//         const objItem = JSON.parse(localStorage.getItem(itemId))\n//         objItem.quantity -= 1;\n//         // here i turn it back to string and update LS item by setting item again\n//         let stringItem = JSON.stringify(objItem);\n//         localStorage.setItem(itemId, stringItem);\n//         dispatch(decreaseAC(itemId, itemPrice, quantity));\n//     }\n// }","map":{"version":3,"sources":["C:/Users/USER/Desktop/Shop/src/Redux/cartPreview/cartPreviewAC.js"],"names":["TYPES","cartPreviewAC","type","TOGGLE_CART_PREVIEW","addItemAC","item","itemPrice","ADD_ITEM","addItemThunkCreator","itemId","dispatch","stringItem","JSON","stringify","localStorage","setItem","removeItemAC","quantity","REMOVE_ITEM","removeItemThunkCreator","removeItem","increaseAC","INCREASE_QUANTITY","decreaseAC","DECREASE_QUANTITY"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,yBAAvB,C,CACA;AACA;AACA;;AACA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,SAAO;AACHC,IAAAA,IAAI,EAAEF,KAAK,CAACG;AADT,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,SAAS,GAAG,CAACC,IAAD,EAAOC,SAAP,KAAqB;AAC1C,SAAO;AACHJ,IAAAA,IAAI,EAAEF,KAAK,CAACO,QADT;AAEHF,IAAAA,IAAI,EAAEA,IAFH;AAGHC,IAAAA,SAAS,EAAEA;AAHR,GAAP;AAMH,CAPM;AAWP,OAAO,MAAME,mBAAmB,GAAG,CAACH,IAAD,EAAOC,SAAP,EAAkBG,MAAlB,KAA6B;AAC5D,SAAQC,QAAD,IAAc;AACjB,QAAIC,UAAU,GAAGC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAjB;AACAS,IAAAA,YAAY,CAACC,OAAb,CAAqBN,MAArB,EAA6BE,UAA7B;AACAD,IAAAA,QAAQ,CAACN,SAAS,CAACC,IAAD,EAAOC,SAAP,CAAV,CAAR;AACH,GAJD;AAKH,CANM;AAOP,OAAO,MAAMU,YAAY,GAAG,CAACP,MAAD,EAASH,SAAT,EAAoBW,QAApB,KAAiC;AACzD,SAAO;AACHf,IAAAA,IAAI,EAAEF,KAAK,CAACkB,WADT;AAEHT,IAAAA,MAAM,EAAEA,MAFL;AAGHH,IAAAA,SAAS,EAAEA,SAHR;AAIHW,IAAAA,QAAQ,EAAEA;AAJP,GAAP;AAMH,CAPM;AASP,OAAO,MAAME,sBAAsB,GAAG,CAACV,MAAD,EAASH,SAAT,EAAoBW,QAApB,KAAiC;AACnE,SAAQP,QAAD,IAAc;AACjBI,IAAAA,YAAY,CAACM,UAAb,CAAwBX,MAAxB;AACAC,IAAAA,QAAQ,CAACM,YAAY,CAACP,MAAD,EAASH,SAAT,EAAoBW,QAApB,CAAb,CAAR;AACH,GAHD;AAIH,CALM;AAOP,OAAO,MAAMI,UAAU,GAAG,CAACZ,MAAD,EAASH,SAAT,EAAoBW,QAApB,KAAiC;AACvD,SAAO;AACHf,IAAAA,IAAI,EAAEF,KAAK,CAACsB,iBADT;AAEHb,IAAAA,MAAM,EAAEA,MAFL;AAGHH,IAAAA,SAAS,EAAEA,SAHR;AAIHW,IAAAA,QAAQ,EAAEA;AAJP,GAAP;AAMH,CAPM;AASP,OAAO,MAAMM,UAAU,GAAG,CAACd,MAAD,EAASH,SAAT,EAAoBW,QAApB,KAAiC;AACvD,SAAO;AACHf,IAAAA,IAAI,EAAEF,KAAK,CAACwB,iBADT;AAEHf,IAAAA,MAAM,EAAEA,MAFL;AAGHH,IAAAA,SAAS,EAAEA,SAHR;AAIHW,IAAAA,QAAQ,EAAEA;AAJP,GAAP;AAMH,CAPM,C,CASP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import * as TYPES from './cartPreviewActionType';\r\n// import {\r\n//     initialState\r\n// } from '../departmentsData/departmentsDataReducer';\r\nexport const cartPreviewAC = () => {\r\n    return {\r\n        type: TYPES.TOGGLE_CART_PREVIEW\r\n    };\r\n};\r\n\r\nexport const addItemAC = (item, itemPrice) => {\r\n    return {\r\n        type: TYPES.ADD_ITEM,\r\n        item: item,\r\n        itemPrice: itemPrice,\r\n\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const addItemThunkCreator = (item, itemPrice, itemId) => {\r\n    return (dispatch) => {\r\n        let stringItem = JSON.stringify(item);\r\n        localStorage.setItem(itemId, stringItem);\r\n        dispatch(addItemAC(item, itemPrice))\r\n    }\r\n}\r\nexport const removeItemAC = (itemId, itemPrice, quantity) => {\r\n    return {\r\n        type: TYPES.REMOVE_ITEM,\r\n        itemId: itemId,\r\n        itemPrice: itemPrice,\r\n        quantity: quantity,\r\n    }\r\n}\r\n\r\nexport const removeItemThunkCreator = (itemId, itemPrice, quantity) => {\r\n    return (dispatch) => {\r\n        localStorage.removeItem(itemId);\r\n        dispatch(removeItemAC(itemId, itemPrice, quantity));\r\n    }\r\n}\r\n\r\nexport const increaseAC = (itemId, itemPrice, quantity) => {\r\n    return {\r\n        type: TYPES.INCREASE_QUANTITY,\r\n        itemId: itemId,\r\n        itemPrice: itemPrice,\r\n        quantity: quantity\r\n    }\r\n}\r\n\r\nexport const decreaseAC = (itemId, itemPrice, quantity) => {\r\n    return {\r\n        type: TYPES.DECREASE_QUANTITY,\r\n        itemId: itemId,\r\n        itemPrice: itemPrice,\r\n        quantity: quantity\r\n    }\r\n}\r\n\r\n// export const checkItemThunkCreator = () => {\r\n//     return (dispatch) => {\r\n//         initialState.sections.forEach(section => {\r\n//             section.items.forEach(item => {\r\n//                 // console.log(item)\r\n//                 if (localStorage.getItem(item.id)) {\r\n//                     dispatch(addItemAC(item, item.price))\r\n//                 }\r\n//             });\r\n\r\n//         });\r\n//     }\r\n// }\r\n\r\n// export const increaseThunkCretor = ( itemId, itemPrice, quantity) => {\r\n//     return (dispatch) => {\r\n        \r\n//         // here i get item which is object from local storage and parse it\r\n//         const objItem = JSON.parse(localStorage.getItem(itemId))\r\n//         objItem.quantity += 1;\r\n        \r\n//         // here i turn it back to string and update LS item by setting item again\r\n//         let stringItem = JSON.stringify(objItem);\r\n//         localStorage.setItem(itemId, stringItem);\r\n//         dispatch(increaseAC(itemId, itemPrice, quantity));\r\n//     }\r\n// }\r\n\r\n// export const decreaseThunkCretor = (itemId, itemPrice, quantity) => {\r\n//     return (dispatch) => {\r\n//         // here i get item which is object from local storage and parse it\r\n//         const objItem = JSON.parse(localStorage.getItem(itemId))\r\n//         objItem.quantity -= 1;\r\n        \r\n//         // here i turn it back to string and update LS item by setting item again\r\n//         let stringItem = JSON.stringify(objItem);\r\n//         localStorage.setItem(itemId, stringItem);\r\n//         dispatch(decreaseAC(itemId, itemPrice, quantity));\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}