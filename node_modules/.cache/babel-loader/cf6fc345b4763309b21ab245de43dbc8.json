{"ast":null,"code":"import _toConsumableArray from\"E:\\\\S\\\\Shop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"E:\\\\S\\\\Shop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import*as TYPES from\"./cartPreviewActionType\";import{itemQuantity}from\"./cartPreviewUtils\";var initialState={displayPreview:false,items:[],totalPrice:0};var cartPreviewReducer=function cartPreviewReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case TYPES.TOGGLE_CART_PREVIEW:return _objectSpread(_objectSpread({},state),{},{displayPreview:!state.displayPreview});case TYPES.ADD_ITEM:return _objectSpread(_objectSpread({},state),{},{totalPrice:state.totalPrice+action.itemPrice,items:itemQuantity([].concat(_toConsumableArray(state.items),[action.item]))});case TYPES.INCREASE_QUANTITY:return _objectSpread(_objectSpread({},state),{},{totalPrice:state.totalPrice+action.itemPrice,items:state.items.map(function(item){if(item.id===action.itemId){return _objectSpread(_objectSpread({},item),{},{quantity:item.quantity+=1});}else{return item;}})});case TYPES.DECREASE_QUANTITY:return _objectSpread(_objectSpread({},state),{},{totalPrice:state.totalPrice-action.itemPrice,items:state.items.map(function(item){if(item.id===action.itemId){return _objectSpread(_objectSpread({},item),{},{quantity:item.quantity-=1});}else{return item;}})});case TYPES.REMOVE_ITEM:return _objectSpread(_objectSpread({},state),{},{totalPrice:state.totalPrice-action.itemPrice*action.quantity,items:state.items.filter(function(item){return item.id!==action.itemId;})});case TYPES.CLEAR_ITEMS:return _objectSpread(_objectSpread({},state),{},{items:[],totalPrice:0});default:return state;}};export default cartPreviewReducer;","map":{"version":3,"sources":["E:/S/Shop/src/Redux/cartPreview/cartPreviewReducer.js"],"names":["TYPES","itemQuantity","initialState","displayPreview","items","totalPrice","cartPreviewReducer","state","action","type","TOGGLE_CART_PREVIEW","ADD_ITEM","itemPrice","item","INCREASE_QUANTITY","map","id","itemId","quantity","DECREASE_QUANTITY","REMOVE_ITEM","filter","CLEAR_ITEMS"],"mappings":"qRAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,yBAAvB,CACA,OACIC,YADJ,KAEO,oBAFP,CAGA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,cAAc,CAAE,KADC,CAEjBC,KAAK,CAAE,EAFU,CAGjBC,UAAU,CAAE,CAHK,CAArB,CAMA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBL,YAAyB,IAAXM,CAAAA,MAAW,2CACzD,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKT,CAAAA,KAAK,CAACU,mBAAX,CACI,sCACOH,KADP,MAEIJ,cAAc,CAAE,CAACI,KAAK,CAACJ,cAF3B,GAIJ,IAAKH,CAAAA,KAAK,CAACW,QAAX,CACI,sCAEOJ,KAFP,MAGIF,UAAU,CAAEE,KAAK,CAACF,UAAN,CAAmBG,MAAM,CAACI,SAH1C,CAIQR,KAAK,CAAEH,YAAY,8BAAKM,KAAK,CAACH,KAAX,GAAkBI,MAAM,CAACK,IAAzB,GAJ3B,GAMJ,IAAKb,CAAAA,KAAK,CAACc,iBAAX,CACI,sCACOP,KADP,MAEIF,UAAU,CAAEE,KAAK,CAACF,UAAN,CAAmBG,MAAM,CAACI,SAF1C,CAGQR,KAAK,CAAEG,KAAK,CAACH,KAAN,CAAYW,GAAZ,CAAgB,SAACF,IAAD,CAAU,CAC7B,GAAIA,IAAI,CAACG,EAAL,GAAYR,MAAM,CAACS,MAAvB,CAA+B,CAC3B,sCACOJ,IADP,MAEIK,QAAQ,CAAGL,IAAI,CAACK,QAAL,EAAiB,CAFhC,GAIH,CALD,IAKO,CACH,MAAOL,CAAAA,IAAP,CACH,CACJ,CATM,CAHf,GAcJ,IAAKb,CAAAA,KAAK,CAACmB,iBAAX,CACI,sCACOZ,KADP,MAEIF,UAAU,CAAEE,KAAK,CAACF,UAAN,CAAmBG,MAAM,CAACI,SAF1C,CAGQR,KAAK,CAAEG,KAAK,CAACH,KAAN,CAAYW,GAAZ,CAAgB,SAACF,IAAD,CAAU,CAC7B,GAAIA,IAAI,CAACG,EAAL,GAAYR,MAAM,CAACS,MAAvB,CAA+B,CAC3B,sCACOJ,IADP,MAEIK,QAAQ,CAAGL,IAAI,CAACK,QAAL,EAAiB,CAFhC,GAIH,CALD,IAKO,CACH,MAAOL,CAAAA,IAAP,CACH,CACJ,CATM,CAHf,GAcJ,IAAKb,CAAAA,KAAK,CAACoB,WAAX,CACI,sCACOb,KADP,MAEIF,UAAU,CAAEE,KAAK,CAACF,UAAN,CAAmBG,MAAM,CAACI,SAAP,CAAmBJ,MAAM,CAACU,QAF7D,CAGQd,KAAK,CAAEG,KAAK,CAACH,KAAN,CAAYiB,MAAZ,CAAmB,SAACR,IAAD,QAAUA,CAAAA,IAAI,CAACG,EAAL,GAAYR,MAAM,CAACS,MAA7B,EAAnB,CAHf,GAKJ,IAAKjB,CAAAA,KAAK,CAACsB,WAAX,CACI,sCACOf,KADP,MAEIH,KAAK,CAAE,EAFX,CAGIC,UAAU,CAAE,CAHhB,GAKJ,QACI,MAAOE,CAAAA,KAAP,CAxDR,CA0DH,CA3DD,CA6DA,cAAeD,CAAAA,kBAAf","sourcesContent":["import * as TYPES from \"./cartPreviewActionType\";\r\nimport {\r\n    itemQuantity\r\n} from \"./cartPreviewUtils\";\r\nconst initialState = {\r\n    displayPreview: false,\r\n    items: [],\r\n    totalPrice: 0,\r\n};\r\n\r\nconst cartPreviewReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TYPES.TOGGLE_CART_PREVIEW:\r\n            return {\r\n                ...state,\r\n                displayPreview: !state.displayPreview,\r\n            };\r\n        case TYPES.ADD_ITEM:\r\n            return {\r\n                //it returns new Set of unique items\r\n                ...state,\r\n                totalPrice: state.totalPrice + action.itemPrice,\r\n                    items: itemQuantity([...state.items, action.item]),                  \r\n            };\r\n        case TYPES.INCREASE_QUANTITY:\r\n            return {\r\n                ...state,\r\n                totalPrice: state.totalPrice + action.itemPrice,\r\n                    items: state.items.map((item) => {\r\n                        if (item.id === action.itemId) {\r\n                            return {\r\n                                ...item,\r\n                                quantity: (item.quantity += 1)\r\n                            };\r\n                        } else {\r\n                            return item;\r\n                        }\r\n                    }),\r\n            };\r\n        case TYPES.DECREASE_QUANTITY:\r\n            return {\r\n                ...state,\r\n                totalPrice: state.totalPrice - action.itemPrice,\r\n                    items: state.items.map((item) => {\r\n                        if (item.id === action.itemId) {\r\n                            return {\r\n                                ...item,\r\n                                quantity: (item.quantity -= 1),\r\n                            };\r\n                        } else {\r\n                            return item;\r\n                        }\r\n                    }),\r\n            };\r\n        case TYPES.REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                totalPrice: state.totalPrice - action.itemPrice * action.quantity,\r\n                    items: state.items.filter((item) => item.id !== action.itemId),\r\n            };\r\n        case TYPES.CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                items: [],\r\n                totalPrice: 0\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default cartPreviewReducer;"]},"metadata":{},"sourceType":"module"}