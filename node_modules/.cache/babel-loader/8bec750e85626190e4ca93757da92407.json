{"ast":null,"code":"import*as TYPES from'./cartPreviewActionType';// import {\n//     initialState\n// } from '../departmentsData/departmentsDataReducer';\nexport var cartPreviewAC=function cartPreviewAC(){return{type:TYPES.TOGGLE_CART_PREVIEW};};export var addItemAC=function addItemAC(item,itemPrice){return{type:TYPES.ADD_ITEM,item:item,itemPrice:itemPrice};};export var addItemThunkCreator=function addItemThunkCreator(item,itemPrice,itemId){return function(dispatch){var stringItem=JSON.stringify(item);sessionStorage.setItem(itemId,stringItem);dispatch(addItemAC(item,itemPrice));};};export var removeItemAC=function removeItemAC(itemId,itemPrice,quantity){return{type:TYPES.REMOVE_ITEM,itemId:itemId,itemPrice:itemPrice,quantity:quantity};};export var clearItemsAC=function clearItemsAC(){return{type:TYPES.CLEAR_ITEMS};};export var removeItemThunkCreator=function removeItemThunkCreator(itemId,itemPrice,quantity){return function(dispatch){sessionStorage.removeItem(itemId);dispatch(removeItemAC(itemId,itemPrice,quantity));};};export var increaseAC=function increaseAC(itemId,itemPrice,quantity){return{type:TYPES.INCREASE_QUANTITY,itemId:itemId,itemPrice:itemPrice,quantity:quantity};};export var decreaseAC=function decreaseAC(itemId,itemPrice,quantity){return{type:TYPES.DECREASE_QUANTITY,itemId:itemId,itemPrice:itemPrice,quantity:quantity};};// export const checkItemThunkCreator = () => {\n//     return (dispatch) => {\n//         initialState.sections.forEach(section => {\n//             section.items.forEach(item => {\n//                 // console.log(item)\n//                 if (localStorage.getItem(item.id)) {\n//                     dispatch(addItemAC(item, item.price))\n//                 }\n//             });\n//         });\n//     }\n// }\n// export const increaseThunkCretor = ( itemId, itemPrice, quantity) => {\n//     return (dispatch) => {\n//         // here i get item which is object from local storage and parse it\n//         const objItem = JSON.parse(localStorage.getItem(itemId))\n//         objItem.quantity += 1;\n//         // here i turn it back to string and update LS item by setting item again\n//         let stringItem = JSON.stringify(objItem);\n//         localStorage.setItem(itemId, stringItem);\n//         dispatch(increaseAC(itemId, itemPrice, quantity));\n//     }\n// }\n// export const decreaseThunkCretor = (itemId, itemPrice, quantity) => {\n//     return (dispatch) => {\n//         // here i get item which is object from local storage and parse it\n//         const objItem = JSON.parse(localStorage.getItem(itemId))\n//         objItem.quantity -= 1;\n//         // here i turn it back to string and update LS item by setting item again\n//         let stringItem = JSON.stringify(objItem);\n//         localStorage.setItem(itemId, stringItem);\n//         dispatch(decreaseAC(itemId, itemPrice, quantity));\n//     }\n// }","map":{"version":3,"sources":["E:/S/Shop/src/Redux/cartPreview/cartPreviewAC.js"],"names":["TYPES","cartPreviewAC","type","TOGGLE_CART_PREVIEW","addItemAC","item","itemPrice","ADD_ITEM","addItemThunkCreator","itemId","dispatch","stringItem","JSON","stringify","sessionStorage","setItem","removeItemAC","quantity","REMOVE_ITEM","clearItemsAC","CLEAR_ITEMS","removeItemThunkCreator","removeItem","increaseAC","INCREASE_QUANTITY","decreaseAC","DECREASE_QUANTITY"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,yBAAvB,CACA;AACA;AACA;AACA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC/B,MAAO,CACHC,IAAI,CAAEF,KAAK,CAACG,mBADT,CAAP,CAGH,CAJM,CAMP,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,IAAD,CAAOC,SAAP,CAAqB,CAC1C,MAAO,CACHJ,IAAI,CAAEF,KAAK,CAACO,QADT,CAEHF,IAAI,CAAEA,IAFH,CAGHC,SAAS,CAAEA,SAHR,CAAP,CAMH,CAPM,CAWP,MAAO,IAAME,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACH,IAAD,CAAOC,SAAP,CAAkBG,MAAlB,CAA6B,CAC5D,MAAO,UAACC,QAAD,CAAc,CACjB,GAAIC,CAAAA,UAAU,CAAGC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAjB,CACAS,cAAc,CAACC,OAAf,CAAuBN,MAAvB,CAA+BE,UAA/B,EACAD,QAAQ,CAACN,SAAS,CAACC,IAAD,CAAOC,SAAP,CAAV,CAAR,CACH,CAJD,CAKH,CANM,CAOP,MAAO,IAAMU,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACP,MAAD,CAASH,SAAT,CAAoBW,QAApB,CAAiC,CACzD,MAAO,CACHf,IAAI,CAAEF,KAAK,CAACkB,WADT,CAEHT,MAAM,CAAEA,MAFL,CAGHH,SAAS,CAAEA,SAHR,CAIHW,QAAQ,CAAEA,QAJP,CAAP,CAMH,CAPM,CASP,MAAO,IAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CAC9B,MAAO,CAACjB,IAAI,CAAGF,KAAK,CAACoB,WAAd,CAAP,CACH,CAFM,CAIP,MAAO,IAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACZ,MAAD,CAASH,SAAT,CAAoBW,QAApB,CAAiC,CACnE,MAAO,UAACP,QAAD,CAAc,CACjBI,cAAc,CAACQ,UAAf,CAA0Bb,MAA1B,EACAC,QAAQ,CAACM,YAAY,CAACP,MAAD,CAASH,SAAT,CAAoBW,QAApB,CAAb,CAAR,CACH,CAHD,CAIH,CALM,CAOP,MAAO,IAAMM,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACd,MAAD,CAASH,SAAT,CAAoBW,QAApB,CAAiC,CACvD,MAAO,CACHf,IAAI,CAAEF,KAAK,CAACwB,iBADT,CAEHf,MAAM,CAAEA,MAFL,CAGHH,SAAS,CAAEA,SAHR,CAIHW,QAAQ,CAAEA,QAJP,CAAP,CAMH,CAPM,CASP,MAAO,IAAMQ,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAChB,MAAD,CAASH,SAAT,CAAoBW,QAApB,CAAiC,CACvD,MAAO,CACHf,IAAI,CAAEF,KAAK,CAAC0B,iBADT,CAEHjB,MAAM,CAAEA,MAFL,CAGHH,SAAS,CAAEA,SAHR,CAIHW,QAAQ,CAAEA,QAJP,CAAP,CAMH,CAPM,CAWP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import * as TYPES from './cartPreviewActionType';\r\n// import {\r\n//     initialState\r\n// } from '../departmentsData/departmentsDataReducer';\r\nexport const cartPreviewAC = () => {\r\n    return {\r\n        type: TYPES.TOGGLE_CART_PREVIEW\r\n    };\r\n};\r\n\r\nexport const addItemAC = (item, itemPrice) => {\r\n    return {\r\n        type: TYPES.ADD_ITEM,\r\n        item: item,\r\n        itemPrice: itemPrice,\r\n\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const addItemThunkCreator = (item, itemPrice, itemId) => {\r\n    return (dispatch) => {\r\n        let stringItem = JSON.stringify(item);\r\n        sessionStorage.setItem(itemId, stringItem);\r\n        dispatch(addItemAC(item, itemPrice))\r\n    }\r\n}\r\nexport const removeItemAC = (itemId, itemPrice, quantity) => {\r\n    return {\r\n        type: TYPES.REMOVE_ITEM,\r\n        itemId: itemId,\r\n        itemPrice: itemPrice,\r\n        quantity: quantity,\r\n    }\r\n}\r\n\r\nexport const clearItemsAC = () => {\r\n    return {type:  TYPES.CLEAR_ITEMS}\r\n}\r\n\r\nexport const removeItemThunkCreator = (itemId, itemPrice, quantity) => {\r\n    return (dispatch) => {\r\n        sessionStorage.removeItem(itemId);\r\n        dispatch(removeItemAC(itemId, itemPrice, quantity));\r\n    }\r\n}\r\n\r\nexport const increaseAC = (itemId, itemPrice, quantity) => {\r\n    return {\r\n        type: TYPES.INCREASE_QUANTITY,\r\n        itemId: itemId,\r\n        itemPrice: itemPrice,\r\n        quantity: quantity\r\n    }\r\n}\r\n\r\nexport const decreaseAC = (itemId, itemPrice, quantity) => {\r\n    return {\r\n        type: TYPES.DECREASE_QUANTITY,\r\n        itemId: itemId,\r\n        itemPrice: itemPrice,\r\n        quantity: quantity\r\n    }\r\n}\r\n\r\n\r\n\r\n// export const checkItemThunkCreator = () => {\r\n//     return (dispatch) => {\r\n//         initialState.sections.forEach(section => {\r\n//             section.items.forEach(item => {\r\n//                 // console.log(item)\r\n//                 if (localStorage.getItem(item.id)) {\r\n//                     dispatch(addItemAC(item, item.price))\r\n//                 }\r\n//             });\r\n\r\n//         });\r\n//     }\r\n// }\r\n\r\n// export const increaseThunkCretor = ( itemId, itemPrice, quantity) => {\r\n//     return (dispatch) => {\r\n        \r\n//         // here i get item which is object from local storage and parse it\r\n//         const objItem = JSON.parse(localStorage.getItem(itemId))\r\n//         objItem.quantity += 1;\r\n        \r\n//         // here i turn it back to string and update LS item by setting item again\r\n//         let stringItem = JSON.stringify(objItem);\r\n//         localStorage.setItem(itemId, stringItem);\r\n//         dispatch(increaseAC(itemId, itemPrice, quantity));\r\n//     }\r\n// }\r\n\r\n// export const decreaseThunkCretor = (itemId, itemPrice, quantity) => {\r\n//     return (dispatch) => {\r\n//         // here i get item which is object from local storage and parse it\r\n//         const objItem = JSON.parse(localStorage.getItem(itemId))\r\n//         objItem.quantity -= 1;\r\n        \r\n//         // here i turn it back to string and update LS item by setting item again\r\n//         let stringItem = JSON.stringify(objItem);\r\n//         localStorage.setItem(itemId, stringItem);\r\n//         dispatch(decreaseAC(itemId, itemPrice, quantity));\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}